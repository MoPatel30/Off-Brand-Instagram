[{"C:\\Users\\mopat\\instagram\\frontend\\src\\index.js":"1","C:\\Users\\mopat\\instagram\\frontend\\src\\App.js":"2","C:\\Users\\mopat\\instagram\\frontend\\src\\create-post.js":"3","C:\\Users\\mopat\\instagram\\frontend\\src\\photo-feed.js":"4","C:\\Users\\mopat\\instagram\\frontend\\src\\axios.js":"5","C:\\Users\\mopat\\instagram\\frontend\\src\\firebase.js":"6"},{"size":384,"mtime":1607667389460,"results":"7","hashOfConfig":"8"},{"size":2329,"mtime":1607972672216,"results":"9","hashOfConfig":"8"},{"size":7260,"mtime":1607974792551,"results":"10","hashOfConfig":"8"},{"size":955,"mtime":1607973407129,"results":"11","hashOfConfig":"8"},{"size":167,"mtime":1607416637304,"results":"12","hashOfConfig":"8"},{"size":405,"mtime":1607975715008,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bber96",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mopat\\instagram\\frontend\\src\\index.js",[],"C:\\Users\\mopat\\instagram\\frontend\\src\\App.js",["28"],"C:\\Users\\mopat\\instagram\\frontend\\src\\create-post.js",["29","30","31","32","33","34","35"],"import React, {useState, useEffect} from \"react\"\r\nimport \"./create-post.css\"\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport PhotoFeed from \"./photo-feed\"\r\nimport firebase from \"firebase\"\r\nimport db from \"./firebase\";\r\nimport {storage} from \"./firebase\"\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n\r\n\r\nfunction CreatePost(props) {\r\n    const [form, setForm] = useState(\"\")\r\n    \r\n    const makePost = (e) => {\r\n        e.preventDefault()\r\n        setForm(<MakePostForm user = {props.user} />)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"default\"\r\n                onClick = {makePost}\r\n                startIcon={<CloudUploadIcon />}\r\n            >Upload Image</Button>\r\n\r\n            <div>\r\n                <p>{form}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n\r\n\r\n\r\n\r\n\r\nexport function MakePostForm(props){\r\n    const date = String((new Date().getMonth() + 1) + '/' + new Date().getDate() + '/' + (new Date().getFullYear())) \r\n    \r\n    const [pic, setPic] = useState(null)\r\n    const [desc, setDesc] = useState(\"\")\r\n    const [name, setName] = useState(props.user)\r\n    const [progress, setProgress] = useState(0)\r\n\r\n \r\n    const ImageChange = (e) => {\r\n        e.preventDefault()\r\n        if(e.target.files[0]){\r\n            setPic(e.target.files[0])\r\n        }\r\n    }\r\n\r\n\r\n    const ImageUpload = (e) => {\r\n        e.preventDefault()\r\n        \r\n        const uploadTask = storage.ref(`posts/${pic.name}`).put(pic)\r\n        var number = Math.floor(Math.random() * 100000000)\r\n       \r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n                const progress1 = Math.round((snapshot.byteTransferred / snapshot.totalBytes) * 100)\r\n                console.log(progress1)\r\n                setProgress(progress1)\r\n            },\r\n            (error) => {\r\n                console.log(error)\r\n            },\r\n            () => {\r\n                storage\r\n                    .ref(\"posts\")\r\n                    .child(pic.name)\r\n                    .getDownloadURL()\r\n                    .then(url => {\r\n                        var post = {\r\n                            name: String(name),\r\n                            timestamp: date,\r\n                            photo: url,\r\n                            description: String(desc),\r\n                            likes: 0,\r\n                            id: String(number),\r\n                            likedBy: []\r\n                        }\r\n     \r\n                        db.collection(\"posts\").doc(String(number)).set(post)\r\n                            .then(function() {\r\n                                console.log(\"Document successfully written!\");\r\n                            })\r\n                            .catch(function(error) {\r\n                                console.error(\"Error writing document: \", error);\r\n                            });\r\n\r\n                        setProgress(0)\r\n                        setDesc(\"\")\r\n                        setPic(null)\r\n\r\n                    })\r\n            }\r\n\r\n        )\r\n            \r\n    }\r\n\r\n\r\n    return(\r\n        <div className = \"post-form\">\r\n            <form className = \"form-items\" type = \"submit\">\r\n                <h2 id = \"username\">{props.user}</h2>\r\n                <p id = \"timestamp\">{date}</p>\r\n                <div className = \"input-forms\">\r\n                    <label className = \"label-forms\">Upload Photo: </label>                   \r\n                    <input style = {{marginBottom: \"25px\"}} id = \"picture\" type=\"file\" onChange = {ImageChange}/>\r\n                   \r\n                    <TextField\r\n                        style = {{marginBottom: \"15px\"}}\r\n                        className = \"post-description\"\r\n                        id=\"outlined-multiline-static\"\r\n                        label=\"Description\"\r\n                        multiline\r\n                        rows={4}\r\n                        defaultValue=\"\"\r\n                        variant=\"outlined\"\r\n                        onChange = {(e) => {setDesc(e.target.value)}}\r\n                    />\r\n              \r\n                </div>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type = \"submit\"\r\n                    onClick = {ImageUpload}\r\n                > Post </Button>\r\n                        \r\n            </form>\r\n\r\n        </div>\r\n                 \r\n    )\r\n   \r\n}\r\n\r\n/*\r\n            <img id = \"display-image\" alt = \"pic\" src= \"\" style = {{width: \"400px\", height: \"400px\"}} />\r\n           \r\n            <p>{post}</p>\r\n\r\n*/\r\n\r\n\r\n\r\nexport function NewPost(props){\r\n    const [likes, setLikes] = useState(props.likes)\r\n    const [likedByTheseUsers, setLikedByTheseUsers] = useState(props.likedBy)\r\n    \r\n\r\n    function likePost(postId){ \r\n        if(likedByTheseUsers.indexOf(props.name) === -1){    \r\n            setLikes(likes + 1)            \r\n            db.collection(\"posts\").doc(`${postId}`).update({likes: likes})\r\n                .then(function() {\r\n                    console.log(\"Document successfully written!\");\r\n                })\r\n                .catch(function(error) {\r\n                    console.error(\"Error writing document: \", error);\r\n                });\r\n            \r\n            var tempLikedByTheseUsers = likedByTheseUsers\r\n            tempLikedByTheseUsers.push(props.name)\r\n            setLikedByTheseUsers(tempLikedByTheseUsers)\r\n\r\n            db.collection(\"posts\").doc(`${postId}`).update({likedBy: likedByTheseUsers})\r\n                .then(function() {\r\n                    console.log(\"Document successfully written!\");\r\n                })\r\n                .catch(function(error) {\r\n                    console.error(\"Error writing document: \", error);\r\n                });\r\n        }      \r\n    }\r\n\r\n\r\n    return( \r\n        <div>\r\n            <div className = \"post-body\">\r\n                <div className = \"post-header\">\r\n                    <h2 className = \"post-text\" style = {{paddingLeft: \"5px\"}}>{props.name}</h2>\r\n                    <h2 className = \"post-text\" style = {{paddingRight: \"5px\"}}>{props.timestamp}</h2>\r\n                </div>\r\n\r\n                <div className = \"post-img\">\r\n                    <img id = \"display-image\" alt = \"pic\" src= {props.photo} style = {{width: \"400px\", height: \"400px\"}} />\r\n                    \r\n                </div>\r\n\r\n                <div className = \"post-description\">\r\n                    <p><b>Description: </b> {props.description} </p>\r\n                </div>\r\n                \r\n                <div className = \"post-likes\">                   \r\n                    <p style = {{paddingLeft: \"5px\"}}><b> Likes: </b> {props.likes} </p> \r\n                    <FavoriteIcon  onClick = {() => {likePost(props.id)}} cursor = \"pointer\" />\r\n                  \r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n    )  \r\n}\r\n","C:\\Users\\mopat\\instagram\\frontend\\src\\photo-feed.js",["36","37"],"import React, {useState, useEffect} from 'react'\r\nimport \"./photo-feed.css\"\r\nimport {NewPost} from \"./create-post\"\r\nimport axios from \"axios\"\r\nimport db from \"./firebase\"\r\n\r\n\r\nexport function PhotoFeed(props) {\r\n\r\n    const [fbPost, setFbPost] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        db.collection('posts').onSnapshot(snapshot => {\r\n            setFbPost(snapshot.docs.map(doc => doc.data()))\r\n            \r\n        })\r\n        console.log(fbPost)\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className = \"feed\">\r\n\r\n            {\r\n            fbPost.map((post) => (\r\n                <NewPost name = {props.user} id = {post.id} photo = {post.photo} description = {post.description} user = {post.name} timestamp = {post.timestamp} likes = {post.likes} likedBy = {post.likedBy} />    \r\n            ))} \r\n\r\n            <div style = {{marginBottom: \"125px\"}}>\r\n                <p> </p>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\mopat\\instagram\\frontend\\src\\axios.js",[],"C:\\Users\\mopat\\instagram\\frontend\\src\\firebase.js",[],{"ruleId":"38","severity":1,"message":"39","line":3,"column":21,"nodeType":"40","messageId":"41","endLine":3,"endColumn":28},{"ruleId":"38","severity":1,"message":"42","line":1,"column":26,"nodeType":"40","messageId":"41","endLine":1,"endColumn":35},{"ruleId":"38","severity":1,"message":"43","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":18},{"ruleId":"38","severity":1,"message":"44","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":17},{"ruleId":"38","severity":1,"message":"45","line":5,"column":8,"nodeType":"40","messageId":"41","endLine":5,"endColumn":16},{"ruleId":"38","severity":1,"message":"46","line":14,"column":8,"nodeType":"40","messageId":"41","endLine":14,"endColumn":12},{"ruleId":"38","severity":1,"message":"47","line":54,"column":18,"nodeType":"40","messageId":"41","endLine":54,"endColumn":25},{"ruleId":"38","severity":1,"message":"48","line":55,"column":12,"nodeType":"40","messageId":"41","endLine":55,"endColumn":20},{"ruleId":"38","severity":1,"message":"49","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":13},{"ruleId":"50","severity":1,"message":"51","line":20,"column":8,"nodeType":"52","endLine":20,"endColumn":10,"suggestions":"53"},"no-unused-vars","'NewPost' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'AddBoxIcon' is defined but never used.","'PhotoFeed' is defined but never used.","'firebase' is defined but never used.","'Icon' is defined but never used.","'setName' is assigned a value but never used.","'progress' is assigned a value but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fbPost'. Either include it or remove the dependency array.","ArrayExpression",["54"],{"desc":"55","fix":"56"},"Update the dependencies array to be: [fbPost]",{"range":"57","text":"58"},[469,471],"[fbPost]"]