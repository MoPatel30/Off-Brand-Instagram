[{"C:\\Users\\mopat\\instagram\\frontend\\src\\index.js":"1","C:\\Users\\mopat\\instagram\\frontend\\src\\App.js":"2","C:\\Users\\mopat\\instagram\\frontend\\src\\create-post.js":"3","C:\\Users\\mopat\\instagram\\frontend\\src\\photo-feed.js":"4","C:\\Users\\mopat\\instagram\\frontend\\src\\firebase.js":"5","C:\\Users\\mopat\\instagram\\frontend\\src\\Login.js":"6","C:\\Users\\mopat\\instagram\\frontend\\src\\store\\index.js":"7","C:\\Users\\mopat\\instagram\\frontend\\src\\Profile.js":"8"},{"size":641,"mtime":1608149127376,"results":"9","hashOfConfig":"10"},{"size":3146,"mtime":1608778772794,"results":"11","hashOfConfig":"10"},{"size":10766,"mtime":1608782825930,"results":"12","hashOfConfig":"10"},{"size":1027,"mtime":1608778763308,"results":"13","hashOfConfig":"10"},{"size":397,"mtime":1608783969883,"results":"14","hashOfConfig":"10"},{"size":5218,"mtime":1608783493618,"results":"15","hashOfConfig":"10"},{"size":685,"mtime":1608697815934,"results":"16","hashOfConfig":"10"},{"size":4425,"mtime":1608783384027,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1gcn5sq",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\mopat\\instagram\\frontend\\src\\index.js",[],["37","38"],"C:\\Users\\mopat\\instagram\\frontend\\src\\App.js",["39"],"C:\\Users\\mopat\\instagram\\frontend\\src\\create-post.js",["40","41","42","43"],"C:\\Users\\mopat\\instagram\\frontend\\src\\photo-feed.js",[],"C:\\Users\\mopat\\instagram\\frontend\\src\\firebase.js",[],"C:\\Users\\mopat\\instagram\\frontend\\src\\Login.js",["44"],"import React, {useState, useEffect} from 'react'\r\nimport \"./Login.css\";\r\nimport {auth, provider} from \"./firebase\"\r\nimport {connect} from \"react-redux\"\r\nimport store from \"./store/index\"\r\nimport db from \"./firebase\"\r\n\r\n\r\n\r\nfunction Login() {\r\n\r\n    const [userInfo, setUserInfo] = useState(null)\r\n\r\n    function signIn(){\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n              \r\n                console.log(result.user)\r\n                setUserInfo(result.user)      \r\n            }) \r\n            .catch((error) => alert(error.message))\r\n          \r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(userInfo)\r\n        \r\n        if(userInfo !== null){\r\n            var isOldprofile = checkForProfile(userInfo.displayName)\r\n        if(!isOldprofile){\r\n            var profileNames = []\r\n            console.log(\"true\")\r\n            db.collection(\"profiles\").onSnapshot(function(doc) {\r\n                doc.forEach((info) => {         \r\n                    profileNames.push(info)   \r\n                })\r\n          \r\n                for(let i = 0; i < profileNames.length; i++){\r\n                    var curUserInfo = profileNames[i]\r\n    \r\n                    if(curUserInfo.data().username === userInfo.displayName){\r\n                        store.dispatch({\r\n    \r\n                        type: \"ADD_POST\",\r\n                            payload:\r\n                            {   \r\n                                username: curUserInfo.data().username,\r\n                                userphoto: userInfo.photoURL,\r\n                                userID: curUserInfo.id,\r\n                                likes: curUserInfo.data().likes,\r\n                                posts: curUserInfo.data().posts,\r\n                                bio: curUserInfo.data().bio\r\n                                          \r\n                            }\r\n                        })\r\n                          console.log(curUserInfo.data().username)\r\n                          console.log(userInfo.photoURL)\r\n                          console.log(curUserInfo.id)\r\n                          console.log(curUserInfo.data().likes)\r\n                          console.log(curUserInfo.data().posts)\r\n                          console.log(curUserInfo.data().bio)\r\n                    }\r\n                }\r\n    \r\n            })\r\n                \r\n        }\r\n        else{\r\n            console.log(\"making new new profile, false\")\r\n            var userId = createProfile(userInfo.displayName)\r\n            updateState(userInfo.displayName, userInfo.photoURL, userId)         \r\n        }  \r\n        }\r\n        \r\n    }, [userInfo])\r\n\r\n\r\n\r\n    function checkForProfile(username){\r\n        \r\n        let profileNames = []\r\n        let isNewProfile = true\r\n\r\n        db.collection(\"profiles\").get().then((doc) => {\r\n            doc.forEach((info) => {       \r\n                profileNames.push(info.data().username)\r\n            })\r\n            for(let i = 0; i < profileNames.length; i++){\r\n                var name = profileNames[i]\r\n                console.log(isNewProfile)\r\n                if(name === username){\r\n                    isNewProfile = false\r\n                }\r\n            }\r\n            console.log(\"hi\" + String(isNewProfile))\r\n            return isNewProfile\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    function createProfile(username){\r\n\r\n        const post = {\r\n            username: username,\r\n            bio: \"Edit your bio\",\r\n            likes: 0,\r\n            posts: 0\r\n        }      \r\n        \r\n        var doesProfileNotExist = checkForProfile(username)\r\n        \r\n        var number = Math.floor(Math.random() * 999999999)\r\n\r\n        if(doesProfileNotExist === true){\r\n            console.log(\"making new new profile\")\r\n            \r\n            db.collection(\"profiles\").doc(String(number)).set(post)\r\n                .then(function() {\r\n                    console.log(\"Document successfully written!\");\r\n                })\r\n                .catch(function(error) {\r\n                    console.error(\"Error writing document: \", error);\r\n                });    \r\n        }\r\n\r\n        //setUserID(String(number))\r\n        return String(number)\r\n\r\n    }\r\n\r\n\r\n    function updateState(name, photoURL, userId){\r\n       \r\n        store.dispatch({\r\n            type: \"ADD_POST\",\r\n            payload:\r\n            {   \r\n                username: name,\r\n                userphoto: photoURL,\r\n                userID: userId,\r\n                likes: 0,\r\n                posts: 0,\r\n                bio: \"Edit your own personal bio!\"\r\n                      \r\n            }\r\n          })\r\n    }\r\n\r\n\r\n    return (\r\n        <div id = \"login-pos\">\r\n            <div className = \"login-screen\">\r\n                <h1 id = \"welcome\"><i>Welcome to PhotoShare</i></h1>\r\n                <p id = \"slogan\"><i>Share your moments with the world</i></p>\r\n                <h2 id = \"title\"> Sign In </h2>\r\n                <button id = \"google-btn\" onClick = {signIn}>Google</button>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        dispatch\r\n    }\r\n}\r\nexport default connect(mapDispatchToProps)(Login)\r\n\r\n\r\n","C:\\Users\\mopat\\instagram\\frontend\\src\\store\\index.js",[],"C:\\Users\\mopat\\instagram\\frontend\\src\\Profile.js",["45","46"],"import React, {useState, useEffect} from 'react'\r\nimport {connect} from \"react-redux\"\r\nimport \"./Profile.css\"\r\nimport db from \"./firebase\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\n\r\n\r\nfunction Profile({ username, userID, userPhoto, likes, posts, bio }) {\r\n    const [editBio, setEditBio] = useState(false)\r\n    const [desc, setDesc] = useState(\"This is my bio\")\r\n\r\n    function changeBio(){\r\n        console.log(userPhoto)\r\n        if(!editBio){\r\n            setEditBio(true)\r\n        }\r\n        else{\r\n            setEditBio(false)\r\n        }\r\n    }\r\n\r\n    function updateBio(){\r\n        db.collection(\"profiles\")    \r\n            .doc(userID).update({bio: desc})\r\n                .then(function() {\r\n                    console.log(\"Document successfully written!\");\r\n                })\r\n                .catch(function(error) {\r\n                    console.error(\"Error writing document: \", error);\r\n                });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"profile-body\" style = {{backgroundColor: \"#f8f9f5\"}}>\r\n            <h1 id = \"profile-header\" style = {{marginBottom: \"20px\"}}>{username}'s Profile</h1>\r\n\r\n            <div className = \"user-picture\">\r\n                <img id = \"pro-pic\" src = {userPhoto} alt= \"pro pic\" />\r\n            </div>\r\n\r\n       \r\n            <div className = \"bio\">\r\n                <p>{bio}</p>\r\n                <button onClick = {changeBio}>Edit Bio</button>\r\n                {editBio ? \r\n                    <div>\r\n                        <input type = \"text\" onChange = {(e) => {setDesc(e.target.value)}}></input>\r\n                        <button onClick = {updateBio}>Update</button>\r\n                    </div>\r\n              \r\n                    :(\r\n                        null\r\n                    )\r\n                }\r\n            </div>\r\n\r\n            <div className = \"profile-info\">\r\n                <p>{username} has {posts} posts</p>\r\n            </div>\r\n\r\n            <div className = \"profile-info\">\r\n                <p>{username} has liked {likes} posts</p>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        username: state.username,\r\n        userPhoto: state.userPhoto,\r\n        userID: state.userID,\r\n        likes: state.likes,\r\n        posts: state.posts,\r\n        bio: state.bio\r\n    }\r\n  }\r\n  \r\n  \r\nexport default connect(mapStateToProps)(Profile);\r\n  \r\n\r\n\r\n\r\n\r\nexport function ViewProfiles(props){\r\n    const [user, setUser] = useState(props.username)\r\n    const [photo, setPhoto] = useState(\"\")\r\n    const [bio, setBio] = useState(\"\")\r\n    const [likes, setLikes] = useState(0)\r\n    const [posts, setPosts] = useState(0)\r\n    console.log(props.username)\r\n    const [displayProfile, setDisplayProfile] = useState(true)\r\n \r\n\r\n    useEffect(() => {\r\n        var profileNames = []\r\n\r\n        db.collection(\"profiles\").onSnapshot(function(doc) {\r\n            doc.forEach((info) => {       \r\n                profileNames.push(info)\r\n            })\r\n\r\n            for(let i = 0; i < profileNames.length; i++){\r\n                var userInfo = profileNames[i]\r\n                \r\n                if(userInfo.data().username === user){\r\n                    setBio(userInfo.data().bio)\r\n                    setLikes(userInfo.data().likes)\r\n                    setPosts(userInfo.data().posts) \r\n                }\r\n            }\r\n\r\n        })\r\n\r\n    }, [user])\r\n\r\n    function toggleProfile(){     \r\n        setDisplayProfile(!displayProfile)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        {displayProfile ? \r\n        <div className = \"profile-body\" style = {{backgroundColor: \"#f8f9f5\"}}>\r\n\r\n            <h1 style = {{marginBottom: \"20px\"}}>{user}'s Profile</h1>\r\n\r\n            <div className = \"user-picture\">\r\n                <img id = \"pro-pic\" src = {photo} alt= \"pro pic\" />\r\n            </div>\r\n\r\n            <div className = \"bio\">\r\n                <p>{bio}</p>\r\n        \r\n            </div>\r\n\r\n            <div className = \"profile-info\">\r\n                <p>{user} has {posts} posts</p>\r\n            </div>\r\n\r\n            <div className = \"profile-info\">\r\n                <p>{user} has liked {likes} posts</p>\r\n            </div>\r\n\r\n            <button onClick = {toggleProfile}>close</button>\r\n\r\n        </div>\r\n        :(\r\n            <div>\r\n                <p></p>\r\n            </div>\r\n        )\r\n        }\r\n        </div>\r\n        \r\n    \r\n    )\r\n}\r\n\r\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":10,"column":9,"nodeType":"53","messageId":"54","endLine":10,"endColumn":18},{"ruleId":"55","severity":1,"message":"56","line":98,"column":38,"nodeType":"57","messageId":"58","endLine":98,"endColumn":49},{"ruleId":"51","severity":1,"message":"59","line":204,"column":12,"nodeType":"53","messageId":"54","endLine":204,"endColumn":19},{"ruleId":"51","severity":1,"message":"60","line":271,"column":14,"nodeType":"53","messageId":"54","endLine":271,"endColumn":29},{"ruleId":"61","severity":1,"message":"62","line":294,"column":21,"nodeType":"63","endLine":294,"endColumn":148},{"ruleId":"64","severity":1,"message":"65","line":77,"column":8,"nodeType":"66","endLine":77,"endColumn":18,"suggestions":"67"},{"ruleId":"51","severity":1,"message":"68","line":94,"column":18,"nodeType":"53","messageId":"54","endLine":94,"endColumn":25},{"ruleId":"51","severity":1,"message":"69","line":95,"column":19,"nodeType":"53","messageId":"54","endLine":95,"endColumn":27},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'ModalPost' is defined but never used.","Identifier","unusedVar","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'profile' is assigned a value but never used.","'showUserProfile' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'createProfile'. Either include it or remove the dependency array.","ArrayExpression",["72"],"'setUser' is assigned a value but never used.","'setPhoto' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [createProfile, userInfo]",{"range":"75","text":"76"},[2647,2657],"[createProfile, userInfo]"]